# -*- coding: utf-8 -*-
"""Learning Preprosessing

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AGtU7AjyYIL2NEuoF4Pa2PPV4b2QRYVh

<h1>Import Library yang digunakan</h2>
"""

import os
import pandas as pd
from sklearn.preprocessing import LabelEncoder, MinMaxScaler

"""<h1>Mengabungkan Director dengan path File</h2>"""

director = []
for i in os.listdir():
  direc_dir = os.path.join(os.getcwd(),i)
  director.append(direc_dir)

"""<h1>Menampilkan file yang ada di director</h2>"""

print(director)

"""<h1>Membaca file dari index ke 2 "train.csv"</h2>"""

dataset_housing_train = pd.read_csv(director[1])

"""<h1>Menampilkan semua kolom dalam rentang 10 baris isi dari dataset Train.csv</h1>"""

dataset_housing_train.head(10)

"""<h1><b>1. Missing Value pada LotFrontage </h1>"""

dataset_housing_train[['LotFrontage','MasVnrArea']].head(10)  #menampilkan 10 kolom LotFrontage dan MasVnrArea

print(dataset_housing_train[['LotFrontage','MasVnrArea']].isnull().sum())

"""<h1>Menampilkan Jumlah data kosong pada Kolom LotFontage dan MasVnrArea</h1>

<h3>Mengisi Masing masing Kolom yang Sebelumnya Null menggunakan Method median() dari pandas dan mengatur 1 angka dibelakang koma dengan method round()</h3>
"""

dataset_housing_train['LotFrontage'] = dataset_housing_train['LotFrontage'].fillna(dataset_housing_train['LotFrontage'].mean()).round(1)
dataset_housing_train['MasVnrArea'] = dataset_housing_train['MasVnrArea'].fillna(dataset_housing_train['MasVnrArea'].mean()).round(1)

"""<h1>Menampilkan Hasil Dari kolom LotFrontange dan MasVnrArea Setelah melakukan Fix Missing Value dengan Method mean()</h1>"""

print(dataset_housing_train[['LotFrontage','MasVnrArea']].isnull().sum())
dataset_housing_train[['LotFrontage','MasVnrArea']].head(10)

"""<h1><b>2. ENCODING Pada Kolom NeighborHoot<b></h1>

menampilkan 10 data dari Kolom "MSZoning", "Neighborhood" yang akan melakukan encoding menggunakan LabelEncoder dari Library Sklearn
"""

# dataset = "MSZoning","Neighborhood"
dataset_housing_train[['MSZoning','Neighborhood']].head(10)

"""<h1>Melakukan Encoding pada Kolom Mszoning dan Neighborhood karena dalam format numerik agar bisa diproses oleh model</h1>"""

#Membuat Objek pada labelImage
dataset_Neighborhood = LabelEncoder()
dataset_MSZoning = LabelEncoder()

# Transformasi kolom 'Neighborhood'
dataset_housing_train['Neighborhood'] = dataset_Neighborhood.fit_transform(dataset_housing_train['Neighborhood'])

# Transformasi Kolom 'MSZoning'
dataset_housing_train['MSZoning'] = dataset_MSZoning.fit_transform(dataset_housing_train['MSZoning'])

"""<h1>menampilkan Masing Masing Kolom ketika sudah di encoding</h1>"""

dataset_housing_train[['Neighborhood','MSZoning']].head(10)

"""<h1><b>3. Normalisasi Pada Kolom SalePrice<b></h1>

menampilkan kolom SalePrice dan GrLivArea yang akan di lakukan Normalisasi
"""

dataset_housing_train[['SalePrice','GrLivArea']].head(10)

"""<h3>Melakukan Normalisasi Data pada Kolom SalePrice GrLivArea<h3>

"""

#membuat Objel masing masing masing Kolom untuk normalisasi
normalisasi_SalePrice = MinMaxScaler()
normalisasi_GrLivArea = MinMaxScaler()

# Melakukan Normalisasi pada Kolom SalePrice
dataset_housing_train['SalePrice'] = normalisasi_SalePrice.fit_transform(dataset_housing_train[['SalePrice']])
dataset_housing_train['GrLivArea'] = normalisasi_GrLivArea.fit_transform(dataset_housing_train[['GrLivArea']])

dataset_housing_train[['SalePrice','GrLivArea']].head(10)

"""<h3>menyimpan File CSV setelah melakukan 3 tahap</h3>
  <ul>
    <li>Missing Value</li>
    <li>Encoding</li>
    <li>Normalisasi</li>
  </ul>
"""

dataset_housing_train.to_csv("dataset_missingValue_Encoding_Normalisasi.csv")